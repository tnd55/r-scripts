install.packages("tidyverse")
#######################################################################
##  PACKAGES  ─────────────────────────────────────────────────────────
#######################################################################
library(tidyverse)   # ggplot2, readr, dplyr, …
library(conflicted)  # optional—helps resolve naming clashes
library(patchwork)   # for multi-panel layouts (future use)
library(scales)      # nice axis-label helpers
#######################################################################
##  HELPER FUNCTIONS  ────────────────────────────────────────────────
#######################################################################
# ── 1. Scientific-notation formatter (e.g. 1.6 × 10^5) ──────────────
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zero as "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
# ── 2. Publication theme (clean, boxed, no grid)  ───────────────────
theme_pub <- function(base_size   = 14,
base_family = "Arial") {
theme_minimal(base_size = base_size,
base_family = base_family) +
theme(
# ★ Plot & panel backgrounds (blank = no grey fill)
panel.background = element_blank(),
plot.background  = element_blank(),
# ★ Axis box & lines
axis.line   = element_line(color = "black", linewidth = 1),
# If you prefer a full rectangle border around the panel, uncomment ↓
# panel.border = element_rect(color = "black", fill = NA, linewidth = 1),
# ★ Tick marks
axis.ticks        = element_line(color = "black", linewidth = 1),
axis.ticks.length = unit(0.25, "cm"),  # tick length
axis.ticks.direction = "out",          # point ticks outward
# ★ Tick-label text (size & color)
axis.text.x = element_text(color = "black", size = base_size),
axis.text.y = element_text(color = "black", size = base_size),
# ★ Remove grid lines for a clean look
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# ★ Legend: inside plot, frameless, no title
legend.position   = c(0.87, 0.85),     # (x, y) in [0,1] plot coords
legend.background = element_blank(),
legend.key        = element_blank(),
legend.title      = element_blank(),
legend.text       = element_text(size = base_size),
# ★ Axis titles & plot title
axis.title = element_text(size = base_size * 1.2),
plot.title = element_text(size = base_size * 1.4, face = "bold")
)
}
#######################################################################
##  DATA  ─────────────────────────────────────────────────────────────
#######################################################################
# Read the raw chromatogram data
raw <- read_csv("data/MgQE_betaionone_chiral.csv")
#######################################################################
##  SAVE / VIEW  ─────────────────────────────────────────────────────
#######################################################################
print(final)  # View in RStudio
#######################################################################
##  PLOT  ────────────────────────────────────────────────────────────
#######################################################################
final <- ggplot(raw, aes(time, intensity, colour = type, group = type)) +
geom_line(linewidth = 1) +                                   # data line
labs(x = "Retention time (min)", y = "Intensity") +          # axis titles
scale_x_continuous(                                          # X-axis
limits = c(25, 40),
expand = c(0, 0)                                           # no padding
) +
scale_y_continuous(                                          # Y-axis
limits  = c(0, 30000),
breaks  = seq(0, 30000, by = 10000),                      # nice ticks
expand  = c(0, 0),
labels  = sci_format
) +
theme_pub()                                                  # apply theme
library(tidyverse)   # ggplot2, readr, dplyr, …
library(conflicted)  # optional—helps resolve naming clashes
library(patchwork)   # for multi-panel layouts (future use)
library(scales)
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zero as "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))#
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zero as "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
clear
# ── 1. Scientific-notation formatter (e.g. 1.6 × 10^5) ──────────────
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zero as "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
# ── 2. Publication theme (clean, boxed, no grid)  ───────────────────
theme_pub <- function(base_size   = 14,
base_family = "Arial") {
theme_minimal(base_size = base_size,
base_family = base_family) +
theme(
# ★ Plot & panel backgrounds (blank = no grey fill)
panel.background = element_blank(),
plot.background  = element_blank(),
# ★ Axis box & lines
axis.line   = element_line(color = "black", linewidth = 1),
# If you prefer a full rectangle border around the panel, uncomment ↓
# panel.border = element_rect(color = "black", fill = NA, linewidth = 1),
# ★ Tick marks
axis.ticks        = element_line(color = "black", linewidth = 1),
axis.ticks.length = unit(0.25, "cm"),  # tick length
axis.ticks.direction = "out",          # point ticks outward
# ★ Tick-label text (size & color)
axis.text.x = element_text(color = "black", size = base_size),
axis.text.y = element_text(color = "black", size = base_size),
# ★ Remove grid lines for a clean look
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# ★ Legend: inside plot, frameless, no title
legend.position   = c(0.87, 0.85),     # (x, y) in [0,1] plot coords
legend.background = element_blank(),
legend.key        = element_blank(),
legend.title      = element_blank(),
legend.text       = element_text(size = base_size),
# ★ Axis titles & plot title
axis.title = element_text(size = base_size * 1.2),
plot.title = element_text(size = base_size * 1.4, face = "bold")
)
}
#######################################################################
##  DATA  ─────────────────────────────────────────────────────────────
#######################################################################
# Read the raw chromatogram data
raw <- read_csv("data/MgQE_betaionone_chiral.csv")
#######################################################################
##  DATA  ─────────────────────────────────────────────────────────────
#######################################################################
# Read the raw chromatogram data
raw <- read_csv("data/MgQE_betaionone_chiral.csv")
setwd("~/Library/CloudStorage/Box-Box/PhD Study/Manuscripts-Poster-Overview/MgryphP450/data_analysis/data")
#######################################################################
##  DATA  ─────────────────────────────────────────────────────────────
#######################################################################
# Read the raw chromatogram data
raw <- read_csv("data/MgQE_betaionone_chiral.csv")
setwd("~/Library/CloudStorage/Box-Box/PhD Study/Manuscripts-Poster-Overview/MgryphP450/data_analysis")
#######################################################################
##  DATA  ─────────────────────────────────────────────────────────────
#######################################################################
# Read the raw chromatogram data
raw <- read_csv("data/MgQE_betaionone_chiral.csv")
#######################################################################
##  PLOT  ────────────────────────────────────────────────────────────
#######################################################################
final <- ggplot(raw, aes(time, intensity, colour = type, group = type)) +
geom_line(linewidth = 1) +                                   # data line
labs(x = "Retention time (min)", y = "Intensity") +          # axis titles
scale_x_continuous(                                          # X-axis
limits = c(25, 40),
expand = c(0, 0)                                           # no padding
) +
scale_y_continuous(                                          # Y-axis
limits  = c(0, 30000),
breaks  = seq(0, 30000, by = 10000),                      # nice ticks
expand  = c(0, 0),
labels  = sci_format
) +
theme_pub()                                                  # apply theme
#######################################################################
##  SAVE / VIEW  ─────────────────────────────────────────────────────
#######################################################################
print(final)  # View in RStudio
