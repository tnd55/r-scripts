p_zoom <- ggplot(data, aes(x = mz, y = relative_abundance)) +
geom_line(color = "black", linewidth = 0.4) +
coord_cartesian(ylim = c(0, 20)) +
labs(
x = NULL,
y = "Zoom: 0–20%"
) +
scale_x_continuous(
limits = c(300, 370),
breaks = seq(300, 370, by = 10),
expand = c(0, 0)
) +
theme_minimal(base_size = 12) +
theme(
axis.line = element_line(color = "black"),
panel.grid = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text.x = element_text(color = "black", size = 10),
axis.text.y = element_text(color = "black", size = 10),
plot.margin = margin(0, 30, 10, 10)
)
# ---- 7. Combine Main + Zoom using cowplot ----
combined_plot <- cowplot::plot_grid(
p, p_zoom,
ncol = 1,
rel_heights = c(2, 1)  # main plot twice the height of zoom
)
# ---- 8. Display Combined Plot ----
print(combined_plot)
# ================================================
# Script: plot_ms_relative_zoom.R
# Purpose: Plot Mass Spectrometry data (m/z vs Relative Abundance, sqrt scale, zoomed)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- 1. Scientific-notation formatter (optional, kept for consistency) ----
sci_format <- function(x) {
formatted <- scales::scientific_format()(x)
formatted[x == 0] <- "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))
}
# ---- 2. User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # update path as needed
# ---- 3. Read Data ----
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Calculate Relative Abundance ----
data$relative_abundance <- (data$intensity / max(data$intensity, na.rm = TRUE)) * 100
# ---- 5. Plot ----
p <- ggplot(data, aes(x = mz, y = relative_abundance)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Relative Abundance (sqrt scale)"
) +
scale_x_continuous(
limits = c(300, 400),                     # adjust as needed
breaks = seq(300, 400, by = 5),
expand = c(0, 0)
) +
scale_y_sqrt(
limits = c(0, 100),
breaks = c(0, 1, 2, 5, 10, 20, 50, 100),
expand = c(0, 0)
) +
coord_cartesian(ylim = c(0, 10)) +           # 🔹 Zoom in vertically to 0–10%
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.line = element_line(color = "black", linewidth = 0.8),
panel.grid = element_blank(),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")
)
# ---- 6. Display Plot ----
print(p)
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- 1. Scientific-notation formatter (optional, kept for consistency) ----
sci_format <- function(x) {
formatted <- scales::scientific_format()(x)
formatted[x == 0] <- "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))
}
# ---- 2. User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # update path as needed
# ---- 3. Read Data ----
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Calculate Relative Abundance ----
data$relative_abundance <- (data$intensity / max(data$intensity, na.rm = TRUE)) * 100
# ---- 5. Plot ----
p <- ggplot(data, aes(x = mz, y = relative_abundance)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Relative Abundance (sqrt scale)"
) +
scale_x_continuous(
limits = c(300, 400),                     # adjust as needed
breaks = seq(300, 400, by = 5),
expand = c(0, 0)
) +
scale_y_sqrt(
limits = c(0, 100),
breaks = c(0, 1, 2, 5, 10, 20, 50, 100),
expand = c(0, 0)
) +
coord_cartesian(ylim = c(0, 50)) +           # 🔹 Zoom in vertically to 0–10%
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.line = element_line(color = "black", linewidth = 0.8),
panel.grid = element_blank(),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")
)
# ---- 6. Display Plot ----
print(p)
# ===============================================================
# Script: plot_ms_clean.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ===============================================================
# ---- Load Packages ----
if (!require(ggplot2, quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)
library(scales)
# ---- 1. Helper Function: Scientific Notation Formatter ----
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zeros
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
# ---- 2. User Input ----
file_path <- "data/papaverine_Noxide_HRMS.csv"      # update path as needed
output_path <- "figures/papaverine_Noxide_HRMS.png"
# ---- 3. Read & Validate Data ----
if (!file.exists(file_path)) stop("❌ File not found: ", file_path)
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("❌ CSV must have at least two columns: m/z and intensity")
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Plot Setup ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Abundance"
) +
scale_x_continuous(
limits = c(300, 400),
breaks = seq(300, 400, by = 5),
expand = c(0, 0)
) +
scale_y_continuous(
limits = c(0, 6e6),
breaks = seq(0, 6e6, by = 2e6),
labels = sci_format,
expand = c(0, 0)
) +
theme_minimal(base_size = 14) +
theme(
plot.title      = element_text(hjust = 0.5, face = "bold"),
axis.line       = element_line(color = "black", linewidth = 0.8),
panel.grid      = element_blank(),
axis.ticks      = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text       = element_text(color = "black"),
plot.margin     = margin(10, 30, 10, 10)
) +
coord_cartesian(clip = "off")
# ---- 5. Display Plot ----
print(p)
# ===============================================================
# Script: plot_ms_clean.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ===============================================================
# ---- Load Packages ----
if (!require(ggplot2, quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)
library(scales)
# ---- 1. Helper Function: Scientific Notation Formatter ----
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zeros
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
# ---- 2. User Input ----
file_path <- "data/papaverine_Noxide_HRMS.csv"      # update path as needed
output_path <- "figures/papaverine_Noxide_HRMS.png"
# ---- 3. Read & Validate Data ----
if (!file.exists(file_path)) stop("❌ File not found: ", file_path)
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("❌ CSV must have at least two columns: m/z and intensity")
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Plot Setup ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Abundance"
) +
scale_x_continuous(
limits = c(300, 3700),
breaks = seq(300, 370, by = 5),
expand = c(0, 0)
) +
scale_y_continuous(
limits = c(0, 6e6),
breaks = seq(0, 6e6, by = 2e6),
labels = sci_format,
expand = c(0, 0)
) +
theme_minimal(base_size = 14) +
theme(
plot.title      = element_text(hjust = 0.5, face = "bold"),
axis.line       = element_line(color = "black", linewidth = 0.8),
panel.grid      = element_blank(),
axis.ticks      = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text       = element_text(color = "black"),
plot.margin     = margin(10, 30, 10, 10)
) +
coord_cartesian(clip = "off")
# ---- 5. Display Plot ----
print(p)
# ===============================================================
# Script: plot_ms_clean.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ===============================================================
# ---- Load Packages ----
if (!require(ggplot2, quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)
library(scales)
# ---- 1. Helper Function: Scientific Notation Formatter ----
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zeros
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
# ---- 2. User Input ----
file_path <- "data/papaverine_Noxide_HRMS.csv"      # update path as needed
output_path <- "figures/papaverine_Noxide_HRMS.png"
# ---- 3. Read & Validate Data ----
if (!file.exists(file_path)) stop("❌ File not found: ", file_path)
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("❌ CSV must have at least two columns: m/z and intensity")
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Plot Setup ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Abundance"
) +
scale_x_continuous(
limits = c(300, 370),
breaks = seq(300, 370, by = 5),
expand = c(0, 0)
) +
scale_y_continuous(
limits = c(0, 6e6),
breaks = seq(0, 6e6, by = 2e6),
labels = sci_format,
expand = c(0, 0)
) +
theme_minimal(base_size = 14) +
theme(
plot.title      = element_text(hjust = 0.5, face = "bold"),
axis.line       = element_line(color = "black", linewidth = 0.8),
panel.grid      = element_blank(),
axis.ticks      = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text       = element_text(color = "black"),
plot.margin     = margin(10, 30, 10, 10)
) +
coord_cartesian(clip = "off")
# ---- 5. Display Plot ----
print(p)
# ---- 7. Save Plot ----
ggsave("figures/CYP105Stv_papaverine_v2.png",
p, width = 8, height = 3, dpi = 300)
# ================================================
# Script: plot_ms_relative_zoom.R
# Purpose: Plot Mass Spectrometry data (m/z vs Relative Abundance, sqrt scale, zoomed)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- 1. Scientific-notation formatter (optional, kept for consistency) ----
sci_format <- function(x) {
formatted <- scales::scientific_format()(x)
formatted[x == 0] <- "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))
}
# ---- 2. User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # update path as needed
# ---- 3. Read Data ----
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Calculate Relative Abundance ----
data$relative_abundance <- (data$intensity / max(data$intensity, na.rm = TRUE)) * 100
# ---- 5. Plot ----
p <- ggplot(data, aes(x = mz, y = relative_abundance)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Relative Abundance (sqrt scale)"
) +
scale_x_continuous(
limits = c(300, 370),                     # adjust as needed
breaks = seq(300, 370, by = 5),
expand = c(0, 0)
) +
scale_y_sqrt(
limits = c(0, 100),
breaks = c(0, 1, 2, 5, 10, 20, 50, 100),
expand = c(0, 0)
) +
coord_cartesian(ylim = c(0, 50)) +           # 🔹 Zoom in vertically to 0–10%
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.line = element_line(color = "black", linewidth = 0.8),
panel.grid = element_blank(),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")
)
# ---- 6. Display Plot ----
print(p)
# ===============================================================
# Script: plot_ms_clean.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ===============================================================
# ---- Load Packages ----
if (!require(ggplot2, quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)
library(scales)
# ---- 1. Helper Function: Scientific Notation Formatter ----
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zeros
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
# ---- 2. User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"      # update path as needed
output_path <- "figures/CYP105Stv_papaverine_v3.png"
# ---- 3. Read & Validate Data ----
if (!file.exists(file_path)) stop("❌ File not found: ", file_path)
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("❌ CSV must have at least two columns: m/z and intensity")
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Plot Setup ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Abundance"
) +
scale_x_continuous(
limits = c(300, 370),
breaks = seq(300, 370, by = 5),
expand = c(0, 0)
) +
scale_y_continuous(
limits = c(0, 6e6),
breaks = seq(0, 6e6, by = 2e6),
labels = sci_format,
expand = c(0, 0)
) +
theme_minimal(base_size = 14) +
theme(
plot.title      = element_text(hjust = 0.5, face = "bold"),
axis.line       = element_line(color = "black", linewidth = 0.8),
panel.grid      = element_blank(),
axis.ticks      = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text       = element_text(color = "black"),
plot.margin     = margin(10, 30, 10, 10)
) +
coord_cartesian(clip = "off")
# ---- 5. Display Plot ----
print(p)
# ================================================
# Script: plot_ms_relative_zoom.R
# Purpose: Plot Mass Spectrometry data (m/z vs Relative Abundance, sqrt scale, zoomed)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- 1. Scientific-notation formatter (optional, kept for consistency) ----
sci_format <- function(x) {
formatted <- scales::scientific_format()(x)
formatted[x == 0] <- "0"
parse(text = gsub("e\\+?", " %*% 10^", formatted))
}
# ---- 2. User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # update path as needed
# ---- 3. Read Data ----
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Calculate Relative Abundance ----
data$relative_abundance <- (data$intensity / max(data$intensity, na.rm = TRUE)) * 100
# ---- 5. Plot ----
p <- ggplot(data, aes(x = mz, y = relative_abundance)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Relative Abundance (sqrt scale)"
) +
scale_x_continuous(
limits = c(300, 370),                     # adjust as needed
breaks = seq(300, 370, by = 5),
expand = c(0, 0)
) +
scale_y_sqrt(
limits = c(0, 100),
breaks = c(0, 1, 2, 5, 10, 20, 50, 100),
expand = c(0, 0)
) +
coord_cartesian(ylim = c(0, 50)) +           # 🔹 Zoom in vertically to 0–10%
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.line = element_line(color = "black", linewidth = 0.8),
panel.grid = element_blank(),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black")
)
# ---- 6. Display Plot ----
print(p)
# ===============================================================
# Script: plot_ms_clean.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ===============================================================
# ---- Load Packages ----
if (!require(ggplot2, quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)
library(scales)
# ---- 1. Helper Function: Scientific Notation Formatter ----
sci_format <- function(x) {
formatted <- scientific_format()(x)               # "1.6e+05"
formatted[x == 0] <- "0"                          # keep exact zeros
parse(text = gsub("e\\+?", " %*% 10^", formatted))# convert to 1.6 × 10^5
}
# ---- 2. User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"      # update path as needed
output_path <- "figures/CYP105Stv_papaverine_v3.png"
# ---- 3. Read & Validate Data ----
if (!file.exists(file_path)) stop("❌ File not found: ", file_path)
data <- read.csv(file_path, header = TRUE)
if (ncol(data) < 2) stop("❌ CSV must have at least two columns: m/z and intensity")
colnames(data)[1:2] <- c("mz", "intensity")
# ---- 4. Plot Setup ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "black", linewidth = 0.5) +
labs(
x = "m/z",
y = "Abundance"
) +
scale_x_continuous(
limits = c(300, 370),
breaks = seq(300, 370, by = 5),
expand = c(0, 0)
) +
scale_y_continuous(
limits = c(0, 6e6),
breaks = seq(0, 6e6, by = 2e6),
labels = sci_format,
expand = c(0, 0)
) +
theme_minimal(base_size = 14) +
theme(
plot.title      = element_text(hjust = 0.5, face = "bold"),
axis.line       = element_line(color = "black", linewidth = 0.8),
panel.grid      = element_blank(),
axis.ticks      = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(5, "pt"),
axis.text       = element_text(color = "black"),
plot.margin     = margin(10, 30, 10, 10)
) +
coord_cartesian(clip = "off")
# ---- 5. Display Plot ----
print(p)
