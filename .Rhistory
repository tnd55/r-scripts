install.packages("tidyverse")
# ================================================
# Script: plot_ms.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
# Install ggplot2 if not already installed
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
# Path to your CSV file (update this to your actual file path)
file_path <- "data/mass_spec_data.csv"
# ---- Read Data ----
# Assumes first column = m/z, second column = relative intensity
data <- read.csv(file_path, header = TRUE)
# ================================================
# Script: plot_ms.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
# Install ggplot2 if not already installed
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
# Path to your CSV file (update this to your actual file path)
file_path <- "data/CYP105Stv_papaverine.csv"
# ---- Read Data ----
# Assumes first column = m/z, second column = relative intensity
data <- read.csv(file_path, header = TRUE)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Workstation/r-scripts")
# ================================================
# Script: plot_ms.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
# Install ggplot2 if not already installed
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
# Path to your CSV file (update this to your actual file path)
file_path <- "data/CYP105Stv_papaverine.csv"
# ---- Read Data ----
# Assumes first column = m/z, second column = relative intensity
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "steelblue", linewidth = 0.8) +
labs(
title = "Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
panel.grid.minor = element_blank()
)
# ---- Display Plot ----
print(p)
# ---- Optional: Save Plot ----
# ggsave("mass_spectrum_plot.png", p, width = 8, height = 4, dpi = 300)
# ================================================
# Script: plot_ms.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
# Install ggplot2 if not already installed
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
# Path to your CSV file (update this to your actual file path)
file_path <- "data/CYP105Stv_papaverine.csv"
# ---- Read Data ----
# Assumes first column = m/z, second column = relative intensity
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "steelblue", linewidth = 0.8) +
labs(
title = "Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
scale_x_continuous(                                          # X-axis
limits = c(300, 400),
expand = c(0, 0)                                           # no padding
) +
scale_y_continuous(                                          # Y-axis
limits  = c(0, 800000),
breaks  = seq(0, 800000, by = 160000),                      # nice ticks
expand  = c(0, 0),
labels  = sci_format
)
# ================================================
# Script: plot_ms.R
# Purpose: Plot Mass Spectrometry data (m/z vs Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
# Install ggplot2 if not already installed
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
# Path to your CSV file (update this to your actual file path)
file_path <- "data/CYP105Stv_papaverine.csv"
# ---- Read Data ----
# Assumes first column = m/z, second column = relative intensity
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = intensity)) +
geom_line(color = "steelblue", linewidth = 0.8) +
labs(
title = "Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
scale_x_continuous(                                          # X-axis
limits = c(300, 400),
expand = c(0, 0)                                           # no padding
) +
scale_y_continuous(                                          # Y-axis
limits  = c(0, 800000),
breaks  = seq(0, 800000, by = 160000),                      # nice ticks
expand  = c(0, 0)
# labels  = sci_format
)
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
panel.grid.minor = element_blank()
)
# ---- Display Plot ----
print(p)
# ---- Optional: Save Plot ----
# ggsave("mass_spectrum_plot.png", p, width = 8, height = 4, dpi = 300)
# ================================================
# Script: plot_ms_normalized.R
# Purpose: Plot normalized Mass Spectrometry data (m/z vs Relative Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
file_path <- "CYP105Stv_papaverine.csv"  # Update this to your CSV file
# ---- Read Data ----
data <- read.csv(file_path, header = TRUE)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Workstation/r-scripts")
# ================================================
# Script: plot_ms_normalized.R
# Purpose: Plot normalized Mass Spectrometry data (m/z vs Relative Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # Update this to your CSV file
# ---- Read Data ----
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Normalize Intensity ----
max_intensity <- max(data$intensity, na.rm = TRUE)
data$rel_intensity <- (data$intensity / max_intensity) * 100
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = rel_intensity)) +
geom_line(color = "darkred", linewidth = 0.8) +
labs(
title = "Normalized Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
panel.grid.minor = element_blank()
)
# ---- Display Plot ----
print(p)
# ---- Optional: Save normalized data and plot ----
# write.csv(data, "mass_spec_normalized.csv", row.names = FALSE)
# ggsave("mass_spectrum_normalized.png", p, width = 8, height = 4, dpi = 300)
# ================================================
# Script: plot_ms_normalized.R
# Purpose: Plot normalized Mass Spectrometry data (m/z vs Relative Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # Update this to your CSV file
# ---- Read Data ----
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Normalize Intensity ----
max_intensity <- max(data$intensity, na.rm = TRUE)
data$rel_intensity <- (data$intensity / max_intensity) * 100
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = rel_intensity)) +
geom_line(color = "darkred", linewidth = 0.8) +
labs(
title = "Normalized Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
scale_x_continuous(                                          # X-axis
limits = c(15, 30),
expand = c(0, 0)                                           # no padding
) +
scale_y_continuous(                                          # Y-axis
limits  = c(0, 160000),
breaks  = seq(0, 160000, by = 40000),                      # nice ticks
expand  = c(0, 0)
# labels  = sci_format
)
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
panel.grid.minor = element_blank()
)
# ---- Display Plot ----
print(p)
# ---- Optional: Save normalized data and plot ----
# write.csv(data, "mass_spec_normalized.csv", row.names = FALSE)
# ggsave("mass_spectrum_normalized.png", p, width = 8, height = 4, dpi = 300)
# ================================================
# Script: plot_ms_normalized.R
# Purpose: Plot normalized Mass Spectrometry data (m/z vs Relative Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # Update this to your CSV file
# ---- Read Data ----
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Normalize Intensity ----
max_intensity <- max(data$intensity, na.rm = TRUE)
data$rel_intensity <- (data$intensity / max_intensity) * 100
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = rel_intensity)) +
geom_line(color = "darkred", linewidth = 0.8) +
labs(
title = "Normalized Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
scale_x_continuous(                                          # X-axis
limits = c(300, 400),
expand = c(0, 0)                                           # no padding
# ) +
# scale_y_continuous(                                          # Y-axis
#   limits  = c(0, 160000),
#   breaks  = seq(0, 160000, by = 40000),                      # nice ticks
#   expand  = c(0, 0)
#   # labels  = sci_format
)
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
panel.grid.minor = element_blank()
)
# ---- Display Plot ----
print(p)
# ---- Optional: Save normalized data and plot ----
# write.csv(data, "mass_spec_normalized.csv", row.names = FALSE)
# ggsave("mass_spectrum_normalized.png", p, width = 8, height = 4, dpi = 300)
# ================================================
# Script: plot_ms_normalized.R
# Purpose: Plot normalized Mass Spectrometry data (m/z vs Relative Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # Update this to your CSV file
# ---- Read Data ----
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Normalize Intensity ----
max_intensity <- max(data$intensity, na.rm = TRUE)
data$rel_intensity <- (data$intensity / max_intensity) * 100
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = rel_intensity)) +
geom_line(color = "darkred", linewidth = 0.5) +
labs(
title = "Normalized Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
scale_x_continuous(                                          # X-axis
limits = c(300, 400),
expand = c(0, 0)                                           # no padding
# ) +
# scale_y_continuous(                                          # Y-axis
#   limits  = c(0, 160000),
#   breaks  = seq(0, 160000, by = 40000),                      # nice ticks
#   expand  = c(0, 0)
#   # labels  = sci_format
)
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
panel.grid.minor = element_blank()
)
# ---- Display Plot ----
print(p)
# ---- Optional: Save normalized data and plot ----
# write.csv(data, "mass_spec_normalized.csv", row.names = FALSE)
# ggsave("mass_spectrum_normalized.png", p, width = 8, height = 4, dpi = 300)
# ================================================
# Script: plot_ms_normalized.R
# Purpose: Plot normalized Mass Spectrometry data (m/z vs Relative Intensity)
# Author: [Your Name]
# Date: [Date]
# ================================================
# ---- Load Required Package ----
if (!require(ggplot2)) install.packages("ggplot2", dependencies = TRUE)
# ---- User Input ----
file_path <- "data/CYP105Stv_papaverine.csv"  # Update this to your CSV file
# ---- Read Data ----
data <- read.csv(file_path, header = TRUE)
# ---- Basic Validation ----
if (ncol(data) < 2) stop("Error: CSV must have at least two columns (m/z, intensity).")
# Rename columns for clarity
colnames(data)[1:2] <- c("mz", "intensity")
# ---- Normalize Intensity ----
max_intensity <- max(data$intensity, na.rm = TRUE)
data$rel_intensity <- (data$intensity / max_intensity) * 100
# ---- Plot ----
p <- ggplot(data, aes(x = mz, y = rel_intensity)) +
geom_line(color = "darkred", linewidth = 0.5) +
labs(
title = "Normalized Mass Spectrum",
x = "m/z (mass-to-charge ratio)",
y = "Relative Intensity (%)"
) +
scale_x_continuous(                                          # X-axis
limits = c(300, 380),
expand = c(0, 0)                                           # no padding
# ) +
# scale_y_continuous(                                          # Y-axis
#   limits  = c(0, 160000),
#   breaks  = seq(0, 160000, by = 40000),                      # nice ticks
#   expand  = c(0, 0)
#   # labels  = sci_format
)
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
panel.grid.minor = element_blank()
)
# ---- Display Plot ----
print(p)
# ---- Optional: Save normalized data and plot ----
# write.csv(data, "mass_spec_normalized.csv", row.names = FALSE)
# ggsave("mass_spectrum_normalized.png", p, width = 8, height = 4, dpi = 300)
